@model Product
@using e_commerce_website.Helpers
@using System.Security.Claims


	@{
    ViewData["Title"] = "Product Details";

    var primaryVariant = Model.Variants?.FirstOrDefault();
    var primaryImage = primaryVariant?.Images?.FirstOrDefault(i => i.IsPrimary) 
                       ?? primaryVariant?.Images?.FirstOrDefault();

    var primaryVariantSize = primaryVariant?.Size;
    var primaryVariantPrice = primaryVariant?.Price;
    var primaryVariantColor = primaryVariant?.Color;
    var primaryImageUrl = primaryImage?.ImageUrl;
    var primaryVariantId = primaryVariant?.VariantID;

    var avgRating = (Model.Reviews != null && Model.Reviews.Count > 0)
        ? Math.Round(Model.Reviews.Average(r => r.Rating))
        : 5;

}





@section Styles {
    <link rel="stylesheet" href="~/css/product/details.css" asp-append-version="true" />

}




<div class="product-details-container">
	<div id="product-details-inner-container" class="product-details-inner-container">
		<div class="product-image">
			<img id="product-img" src="@primaryImageUrl" alt="Product Image">
		</div>
		<div class="product-details-outer">
			<div class="product-details-inner">
			<h2 id="product-name">@StringHelper.CapitalizeEachWord(Model.ProductName)</h2>
			<h3 id="product-brand">@StringHelper.CapitalizeEachWord(Model.Brand?.BrandName)</h3>
				<h3 id="product-details">@StringHelper.CapitalizeEachWord(Model.Description)</h3>
			<div id="star-ratings" class="star-ratings">
				
					
						@for (int i = 1; i <= 5; i++)
							{
							var starClass = i <= avgRating ? "filled-star" : "not-filled-star";
							<span class="material-symbols-outlined @starClass">star</span>
							}
					
			</div>
			<p id="product-price" class="product-price">$@primaryVariantPrice</p>
			<p class="tax-info">inclusive of all taxes</p>
			<p class="colors-info">Available Colors</p>
			<div class="product-colors">
				@foreach (var variant in Model.Variants)
						{
						var colorStyle = "background-color:" + variant.Color;
						<div class="color-outer">
							<div class="color" style=@colorStyle></div>
						</div>
						}
				</div>
			<div id="product-btns" class="product-btns">
				<!-- href added dynamically -->
				@if(User.Identity != null && User.Identity.IsAuthenticated){
				<a id="add-cart-btn" class="cart-btn" data-variant-id=@primaryVariantId href="#">
					<div id="cart-container" class="cart-container">
						<span id="cart-icon" class="material-symbols-outlined">
							add_shopping_cart
						</span>
						<span id="cart-content">Add to Cart</span>
					</div>
				</a>
					<a id="remove-cart-btn" class="cart-btn" data-variant-id=@primaryVariantId href="#">
						<div id="cart-container" class="cart-container">
							<span id="cart-icon" class="material-symbols-outlined">
								remove_shopping_cart
							</span>
							<span id="cart-content">Remove From Cart</span>
						</div>
					</a>
					}
				<a id="favorite-btn" class="favourite-btn">
					<div id="favorite-container" class="not-favorite-container">
						<span id="favorite-icon" class="material-symbols-outlined favorite-icon">
							favorite
						</span>
						<span id="favorite-content">Favorite</span>
					</div>
				</a>
			</div>
			</div>
		</div>
	</div>
</div>

@section Scripts{
	<script src="~/js/cart/cart.js"></script>
	@if(User.Identity != null && User.Identity.IsAuthenticated){
	<script type="text/javascript">
		handleCartExists("/api/cart/exists",@primaryVariantId);
		handleAddToCart("/api/cart/add");
		handleRemoveFromCart("/api/cart/remove");
	</script>
	}
}